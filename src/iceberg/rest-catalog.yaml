apiVersion: v1
kind: ConfigMap
metadata:
  name: iceberg-rest-catalog-config
  namespace: iceberg
data:
  catalog-config.yaml: |
    catalogs:
      default:
        type: jdbc
        url: jdbc:postgresql://iceberg-postgres:5432/iceberg
        username: iceberg
        password: ${CATALOG_PASSWORD}
        warehouse: s3://iceberg-warehouse
    warehouse:
      type: s3
      s3.endpoint: http://rook-ceph-rgw-my-store.rook-ceph.svc.cluster.local
      s3.access-key-id: ${S3_ACCESS_KEY}
      s3.secret-access-key: ${S3_SECRET_KEY}
      s3.path-style-access: true
      s3.region: us-east-1
    rest:
      port: 8181
---
apiVersion: v1
kind: Secret
metadata:
  name: iceberg-rest-catalog-secrets
  namespace: iceberg
type: Opaque
data:
  catalogPassword: MTIzNDEyMzQ=  # base64 encoded '12341234'
  s3AccessKey: OEUzR0wwVlFaTFFXWVYxOFUyU08=  # Updated from Ceph
  s3SecretKey: b0JFOEZCUHdHbFFsSVRiT0k0TFVMY2c0dldmaWZCaUNBZDc3TnV0YQ==  # Updated from Ceph
---
apiVersion: v1
kind: Service
metadata:
  name: iceberg-rest-catalog-headless
  namespace: iceberg
spec:
  clusterIP: None
  selector:
    app: iceberg-rest-catalog
  ports:
  - port: 8181
    targetPort: 8181
    name: rest
---
apiVersion: v1
kind: Service
metadata:
  name: iceberg-rest-catalog
  namespace: iceberg
spec:
  type: NodePort
  selector:
    app: iceberg-rest-catalog
  ports:
  - port: 8181
    targetPort: 8181
    name: rest
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: iceberg-rest-catalog
  namespace: iceberg
spec:
  serviceName: "iceberg-rest-catalog-headless"
  replicas: 1
  selector:
    matchLabels:
      app: iceberg-rest-catalog
  template:
    metadata:
      labels:
        app: iceberg-rest-catalog
    spec:
      containers:
      - name: rest-catalog
        image: tabulario/iceberg-rest:0.5.0
        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
          limits:
            cpu: "2"
            memory: "2Gi"
        env:
        - name: CATALOG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: iceberg-rest-catalog-secrets
              key: catalogPassword
        - name: S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: iceberg-rest-catalog-secrets
              key: s3AccessKey
        - name: S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: iceberg-rest-catalog-secrets
              key: s3SecretKey
        # Add Java options
        - name: JAVA_OPTS
          value: "-Xmx1024m -Xms512m"
        ports:
        - containerPort: 8181
          name: rest
        volumeMounts:
        - name: config-volume
          mountPath: /etc/iceberg/catalog-config.yaml
          subPath: catalog-config.yaml
        - name: cache-volume
          mountPath: /tmp/iceberg-cache
        # Modify probe: use TCP socket check instead of HTTP
        livenessProbe:
          tcpSocket:
            port: 8181
          initialDelaySeconds: 60 
          periodSeconds: 20
        readinessProbe:
          tcpSocket:
            port: 8181
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: config-volume
        configMap:
          name: iceberg-rest-catalog-config
  volumeClaimTemplates:
  - metadata:
      name: cache-volume
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: standard-rwo
      resources:
        requests:
          storage: 5Gi
---
# ObjectBucketClaim for creating S3 bucket in Rook-Ceph
apiVersion: objectbucket.io/v1alpha1
kind: ObjectBucketClaim
metadata:
  name: iceberg-warehouse-bucket
  namespace: iceberg
spec:
  generateBucketName: iceberg-warehouse
  storageClassName: rook-ceph-delete-bucket
---
